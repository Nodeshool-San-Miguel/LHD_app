{"version":3,"sources":["assets/images/Mlh.svg","components/ListOfHackers/index.js","components/Registration/Dropdown.js","components/Registration/index.js","components/Teams/index.js","components/Header/index.js","components/Home.js","index.js","assets/images/Developer_photo.png"],"names":["module","exports","hackers","setHackers","console","info","itemLayout","dataSource","renderItem","index","name","email","Item","actions","type","onClick","clone","splice","deleteMeByIndex","Meta","avatar","src","Developer_photo","title","description","category","setCategory","text","useState","viewDropdown","showDropdown","categories","setCategories","useEffect","fetch","API","then","res","json","data","placement","overlay","map","idCategory","key","visible","onVisibleChange","state","className","size","lang","teamName","setTeamName","process","cancelRegistration","placeholder","team_name","onChange","input","target","value","set_category","ListOfHackers","length","window","cordova","plugins","barcodeScanner","scan","result","a","found","swal","checkin","hacker","id","indexOf","push","error","preferFrontCamera","showFlipCameraButton","showTorchButton","prompt","scan_prompt","resultDisplayDuration","orientation","formats","add_hacker","disabled","register_team","teamData","idTeamType","nameTeam","createdBy","options","headers","method","mode","body","JSON","stringify","status","catch","err","cancel_registration","teams","setTeams","members","alert","getTeamData","pushScreen","MLH_PIC","alt","defaultSelectedKeys","theme","Registration","header","Teams","logout","Content","languages","currentScreen","setScreen","Header","document","addEventListener","ReactDOM","render","Home","cordovaWork","querySelector"],"mappings":"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","file":"static/js/main.c10a4b68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mlh.c6849a42.svg\";","import React from \"react\"\r\nimport { List, Avatar, Icon } from \"antd\"\r\nimport Developer_photo from '../../assets/images/Developer_photo.png'\r\n\r\nexport default ({hackers = [], setHackers=console.info}) => {\r\n  const deleteMeByIndex = index => {\r\n    const clone = [...hackers]\r\n    clone.splice(index, 1)\r\n    setHackers(clone)\r\n  }\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={hackers}\r\n      renderItem={({ name = \"\", email = \"\" }, index) => (\r\n        <List.Item\r\n          actions={[\r\n            <Icon type=\"delete\" onClick={() => deleteMeByIndex(index)} />\r\n          ]}\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={Developer_photo} />}\r\n            title={name}\r\n            description={email}\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Dropdown, Button, Menu, Icon } from \"antd\"\r\n\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\n\r\nexport default ({ category = {}, setCategory = console.info, text=\"\" }) => {\r\n  const [viewDropdown, showDropdown] = useState(false)\r\n  const [categories, setCategories] = useState([])\r\n  useEffect(()=>{\r\n    fetch(API + 'teams_categories/')\r\n    .then(res=>res.json())\r\n    .then(data=>setCategories(data))\r\n  },[])\r\n\r\n\r\n  return (\r\n    <Dropdown\r\n      placement=\"bottomCenter\"\r\n      overlay={\r\n        <Menu>\r\n          {categories.map(({ idCategory, description }) => {\r\n            return (\r\n              <Menu.Item\r\n              key={idCategory}\r\n                onClick={() => {\r\n                  showDropdown(false)\r\n                  setCategory({ idCategory, description })\r\n                }}\r\n              >\r\n                {description}\r\n              </Menu.Item>\r\n            )\r\n          })}\r\n        </Menu>\r\n      }\r\n      visible={viewDropdown}\r\n      onVisibleChange={state => showDropdown(state)}\r\n      className=\"w-full mt-2\"\r\n    >\r\n      <Button\r\n        className=\"flex items-center justify-center\"\r\n        size=\"large\"\r\n        onClick={() => showDropdown(true)}\r\n      >\r\n        {category.description ? category.description : text}\r\n        {viewDropdown ? (\r\n          <Icon type=\"arrow-down\" />\r\n        ) : (\r\n          <Icon type=\"arrow-right\" />\r\n        )}\r\n      </Button>\r\n    </Dropdown>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport ListOfHackers from \"../ListOfHackers\"\r\nimport RegistrationDropdown from \"./Dropdown\"\r\nimport { Input, Button, Icon, Divider } from \"antd\"\r\nimport swal from 'sweetalert'\r\nexport default ({lang=\"\"}) => {\r\n  const [category, setCategory] = useState({})\r\n  const [hackers, setHackers] = useState([])\r\n  const [teamName, setTeamName] = useState()\r\n  const API = process.env.REACT_APP_API_URL;\r\n  const scanQR = () =>{\r\n    window.cordova.plugins.barcodeScanner.scan(\r\n      async function (result) {\r\n\r\n        const data = await fetch(API + 'hackers/' + result.text)\r\n        .then(res=>res.json());\r\n\r\n        if(data){\r\n\r\n          if(data.found===false){\r\n            swal(\"¡Hacker no encontrado!\", \"\", \"warning\")\r\n            return false;\r\n          }\r\n\r\n          if(data.checkin){\r\n            swal(\"¡Hacker ya registrado!\", \"\", \"warning\")\r\n            return false;\r\n          }\r\n\r\n          if (hackers.map(hacker=>hacker.id).indexOf(data.id)>-1){\r\n            swal(\"¡Hacker ya se encuentra en el equipo!\", \"\", \"warning\")\r\n            return false;\r\n          }\r\n          \r\n          const clone = [...hackers]\r\n          clone.push(data)\r\n          setHackers(clone)\r\n          swal(\"¡Hacker encontrado!\", data.name, \"success\")\r\n\r\n        }else{\r\n          swal(\"¡Ha ocurrido un error!\", \"Intentalo nuevamente\", \"error\")\r\n        }\r\n      },\r\n      function (error) {\r\n        swal(\"¡Ha ocurrido un error!\", \"Intentalo nuevamente\", \"error\")\r\n      },\r\n      {\r\n          preferFrontCamera : false, \r\n          showFlipCameraButton : true, \r\n          showTorchButton : true, \r\n          prompt : lang.scan_prompt, \r\n          resultDisplayDuration: 500, \r\n          orientation : \"vertical\",\r\n          formats : \"QR_CODE\"\r\n      }\r\n   );\r\n  }\r\n\r\n  const cancelRegistration = ()=>{\r\n    setCategory({})\r\n    setHackers([])\r\n    setTeamName()\r\n  }\r\n\r\n  const onTeamNameChange = (input)=>{\r\n  setTeamName(input.target.value)\r\n  \r\n}\r\n\r\n  const registerTeam = ()=>{\r\n    let data=\r\n    {\r\n      teamData:{\r\n        idCategory: category.idCategory,\r\n        idTeamType: 1,\r\n        nameTeam: teamName\r\n      },\r\n      hackers:hackers.map(hacker=>hacker.id),\r\n      createdBy:1\r\n    }\r\n    const options ={\r\n      headers: {\r\n        'Accept': 'application/json, text/plain, */*',\r\n        'Content-Type': 'application/json'\r\n    },\r\n      method: \"POST\",\r\n      mode:\"cors\",\r\n      body:JSON.stringify(data)\r\n    }\r\n\r\n    fetch(API+'teams/',options)\r\n    .then(res=>{\r\n\r\n      switch(res.status){\r\n        case 200:\r\n            swal(\"¡Equipo creado correctamente!\", \"\", \"success\")\r\n            cancelRegistration()\r\n            break;\r\n        \r\n        case 500:\r\n            swal(\"¡No se pudo crear el equipo!\", \"Intentalo nuevamente\", \"warning\");\r\n            break;\r\n\r\n        default:\r\n            swal(\"¡Ha ocurrido un error!\", \"Intentalo nuevamente\", \"error\");\r\n            break;\r\n      }\r\n\r\n    })\r\n    .catch(err=>swal(\"¡Error al conectar con servidor!\", \"Intentalo nuevamente\", \"error\"))\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <Input placeholder={lang.team_name} size=\"large\" className=\"w-full mt-2\" onChange={onTeamNameChange} value={teamName} />\r\n      <RegistrationDropdown category={category} setCategory={setCategory} text={lang.set_category}  />\r\n      <ListOfHackers hackers={hackers} setHackers={setHackers}/>\r\n      {(hackers.length<5) ?\r\n      <Button onClick={scanQR} className=\"flex items-center justify-center\">\r\n        <Icon type=\"plus\" /> {lang.add_hacker}\r\n      </Button>\r\n      : null\r\n      }\r\n      <Divider />\r\n      \r\n      {(hackers.length<3) ? <Button type=\"primary\" size=\"large\" className=\"mt-2 w-full\" disabled>{lang.register_team}</Button> : <Button type=\"primary\" size=\"large\" className=\"mt-2 w-full\" onClick={registerTeam}>{lang.register_team}</Button>}\r\n      <Button type=\"dashed\" className=\"mt-2 w-full\" onClick={cancelRegistration}>{lang.cancel_registration}</Button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect,useState } from \"react\"\r\nimport { List, Avatar, Icon } from \"antd\"\r\nimport Developer_photo from '../../assets/images/Developer_photo.png'\r\n\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport default () => {\r\n  const [teams,setTeams] = useState([])\r\n\r\n  useEffect(()=>{\r\n    fetch(API+'teams/')\r\n    .then(res=>res.json())\r\n    .then(data=>setTeams(data))\r\n  },[])\r\n\r\n  const getTeamData = (id)=>{\r\n    alert(\"me diste click \" + id)\r\n  }\r\n  return (\r\n    <div className=\"w-full\">\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={teams}\r\n      renderItem={({ id = \"\", category = \"\", nameTeam=\"\",members=\"\" }) => (\r\n        <List.Item key={id} onClick={()=>getTeamData(id)}>\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={Developer_photo} />}\r\n            title={`${nameTeam} (${members})`}\r\n            description={`Category: ${category}`}\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Menu } from \"antd\"\r\nimport MLH_PIC from \"../../assets/images/Mlh.svg\"\r\nimport RegistrationScreen from \"../Registration\"\r\nimport Teams from \"../Teams\"\r\n\r\n\r\n\r\nexport default ({ pushScreen = console.info, lang=\"\" }) => {\r\n  return (\r\n    <div className=\"flex flex-col -m-4 pb-6\">\r\n      <div className=\"flex items-center justify-center border-b p-4\">\r\n        <img src={MLH_PIC} alt=\"ml-logo\" className=\"w-48\" />\r\n      </div>\r\n      <Menu defaultSelectedKeys={[\"menu-1\"]} theme=\"light\" mode=\"horizontal\">\r\n        <Menu.Item\r\n          key=\"menu-1\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen lang={lang.register_team} />)\r\n          }}\r\n        >\r\n          {lang.header.register_team}\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-2\"\r\n          onClick={() => {\r\n            pushScreen(<Teams />)\r\n          }}\r\n        >\r\n          {lang.header.teams}\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-3\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen lang={lang.register_team} />)\r\n          }}\r\n        >\r\n          {lang.header.logout}\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Layout } from \"antd\"\r\nimport Header from \"../components/Header\"\r\nimport Registration from \"../components/Registration\"\r\nimport languages from \"../assets/languages/languages\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default () => {\r\n\r\n  let language;\r\n  //   window.navigator.globalization.getPreferredLanguage(\r\n  //     function (lang) {language=lang.value.split(\"-\")[0]}\r\n  // );\r\nlanguage=\"en\"\r\n  const lang = languages[language]\r\n  const [currentScreen, setScreen] = useState(<Registration lang={lang.register_team} />)\r\n  return (\r\n    <>\r\n\r\n      <Layout className=\"p-4 bg-white flex flex-col justify-center md:items-center\">\r\n      <div className=\"md:max-w-2xl\">\r\n        <Header pushScreen={setScreen} lang={lang}/>\r\n        <Content>{currentScreen}</Content>\r\n      </div>\r\n      </Layout>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Home from \"./components/Home\"\r\nimport \"cordova_script\"\r\nimport \"tailwindcss/dist/tailwind.min.css\"\r\ndocument.addEventListener(\r\n  \"deviceready\",\r\n  () => {\r\n    ReactDOM.render(\r\n      <Home cordovaWork={true} />,\r\n      document.querySelector(\"#root\")\r\n    )\r\n  },\r\n  false\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/Developer_photo.5fa9ecfd.png\";"],"sourceRoot":""}