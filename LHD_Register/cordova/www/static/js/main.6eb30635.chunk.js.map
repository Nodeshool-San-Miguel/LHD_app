{"version":3,"sources":["assets/images/Mlh.svg","components/ListOfHackers/index.js","components/Registration/Dropdown.js","components/Registration/index.js","components/Teams/index.js","components/Header/index.js","components/QRView/index.js","components/Home.js","index.js"],"names":["module","exports","data","title","description","useState","hackers","setHackers","itemLayout","dataSource","renderItem","index","Item","actions","type","onClick","clone","splice","deleteMeByIndex","Meta","avatar","src","categories","name","category","setCategory","console","info","viewDropdown","showDropdown","placement","overlay","map","value","visible","onVisibleChange","state","className","size","QR","setQRView","placeholder","ListOfHackers","window","cordova","plugins","barcodeScanner","scan","result","alert","text","format","cancelled","error","preferFrontCamera","showFlipCameraButton","showTorchButton","torchOn","saveHistory","prompt","resultDisplayDuration","formats","orientation","disableAnimations","disableSuccessBeep","pushScreen","log","MLH_PIC","alt","defaultSelectedKeys","theme","mode","key","Registration","Teams","shape","dashed","Content","currentScreen","setScreen","isQRView","QRView","Header","document","addEventListener","ReactDOM","render","Home","cordovaWork","querySelector"],"mappings":"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","file":"static/js/main.6eb30635.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mlh.c6849a42.svg\";","import React, { useState } from \"react\"\r\nimport { List, Avatar, Icon } from \"antd\"\r\nconst AVATAR_URL =\r\n  \"https://cdn0.iconfinder.com/data/icons/bitcoin-cryptocurrency-lavender-vol-2-1/512/cypherpunk-512.png\"\r\nconst data = [\r\n  {\r\n    title: \"Hacker's Name 1\",\r\n    description: \"hacker1@gmail.com\"\r\n  },\r\n  {\r\n    title: \"Hacker's Name 2\",\r\n    description: \"hacker2@gmail.com\"\r\n  },\r\n  {\r\n    title: \"Hacker's Name 3\",\r\n    description: \"hacker3@gmail.com\"\r\n  },\r\n  {\r\n    title: \"Hacker's Name 4\",\r\n    description: \"hacker4@gmail.com\"\r\n  },\r\n  {\r\n    title: \"Hacker's Name 5\",\r\n    description: \"hacker5@gmail.com\"\r\n  }\r\n]\r\n\r\nexport default () => {\r\n  const [hackers, setHackers] = useState(data)\r\n  const deleteMeByIndex = index => {\r\n    const clone = [...hackers]\r\n    clone.splice(index, 1)\r\n    setHackers(clone)\r\n  }\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={hackers}\r\n      renderItem={({ title = \"\", description = \"\" }, index) => (\r\n        <List.Item\r\n          actions={[\r\n            <Icon type=\"delete\" onClick={() => deleteMeByIndex(index)} />\r\n          ]}\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={AVATAR_URL} />}\r\n            title={title}\r\n            description={description}\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Dropdown, Button, Menu, Icon } from \"antd\"\r\nconst categories = [\r\n  {\r\n    name: \"Desarrollo Web\"\r\n  }\r\n]\r\nexport default ({ category = {}, setCategory = console.info }) => {\r\n  const [viewDropdown, showDropdown] = useState(false)\r\n\r\n  return (\r\n    <Dropdown\r\n      placement=\"bottomCenter\"\r\n      overlay={\r\n        <Menu>\r\n          {categories.map(({ name, value }) => {\r\n            return (\r\n              <Menu.Item\r\n                onClick={() => {\r\n                  showDropdown(false)\r\n                  setCategory({ name, value })\r\n                }}\r\n              >\r\n                {name}\r\n              </Menu.Item>\r\n            )\r\n          })}\r\n        </Menu>\r\n      }\r\n      visible={viewDropdown}\r\n      onVisibleChange={state => showDropdown(state)}\r\n      className=\"w-full mt-2\"\r\n    >\r\n      <Button\r\n        className=\"flex items-center justify-center\"\r\n        size=\"large\"\r\n        onClick={() => showDropdown(true)}\r\n      >\r\n        {category.name ? category.name : \"Set hacker team category\"}\r\n        {viewDropdown ? (\r\n          <Icon type=\"arrow-down\" />\r\n        ) : (\r\n          <Icon type=\"arrow-right\" />\r\n        )}\r\n      </Button>\r\n    </Dropdown>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport ListOfHackers from \"../ListOfHackers\"\r\nimport RegistrationDropdown from \"./Dropdown\"\r\nimport { Input, Button, Icon, Divider } from \"antd\"\r\n\r\nexport default ({QR=console.info,setQRView=console.info}) => {\r\n  const [category, setCategory] = useState({})\r\n\r\n  const scanQR = () =>{\r\n    window.cordova.plugins.barcodeScanner.scan(\r\n      function (result) {\r\n          alert(\"We got a barcode\\n\" +\r\n                \"Result: \" + result.text + \"\\n\" +\r\n                \"Format: \" + result.format + \"\\n\" +\r\n                \"Cancelled: \" + result.cancelled);\r\n      },\r\n      function (error) {\r\n          alert(\"Scanning failed: \" + error);\r\n      },\r\n      {\r\n          preferFrontCamera : true, // iOS and Android\r\n          showFlipCameraButton : true, // iOS and Android\r\n          showTorchButton : true, // iOS and Android\r\n          torchOn: true, // Android, launch with the torch switched on (if available)\r\n          saveHistory: true, // Android, save scan history (default false)\r\n          prompt : \"Place a barcode inside the scan area\", // Android\r\n          resultDisplayDuration: 500, // Android, display scanned text for X ms. 0 suppresses it entirely, default 1500\r\n          formats : \"QR_CODE,PDF_417\", // default: all but PDF_417 and RSS_EXPANDED\r\n          orientation : \"landscape\", // Android only (portrait|landscape), default unset so it rotates with the device\r\n          disableAnimations : true, // iOS\r\n          disableSuccessBeep: false // iOS and Android\r\n      }\r\n   );\r\n  }\r\n  const setQR = () =>{\r\n    setQRView(!QR)\r\n    console.log(QR)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <Input placeholder=\"Team name\" size=\"large\" className=\"w-full mt-2\" />\r\n      <RegistrationDropdown category={category} setCategory={setCategory} />\r\n      <ListOfHackers />\r\n      <Button onClick={scanQR} className=\"flex items-center justify-center\">\r\n        <Icon type=\"plus\" /> Add hacker\r\n      </Button>\r\n      <Divider />\r\n      <Button type=\"primary\" size=\"large\" className=\"mt-2 w-full\">\r\n        Register team\r\n      </Button>\r\n      <Button type=\"dashed\" className=\"mt-2 w-full\">\r\n        Cancel registration\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Button } from \"antd\"\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <p>This is team's screen</p>\r\n      <Button>aw</Button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Menu } from \"antd\"\r\nimport MLH_PIC from \"../../assets/images/Mlh.svg\"\r\nimport RegistrationScreen from \"../Registration\"\r\nimport Teams from \"../Teams\"\r\nexport default ({ pushScreen = console.info, QR = console.info, setQRView=console.info }) => {\r\n  console.log(QR)\r\n  return (\r\n    <div className=\"flex flex-col -m-4 pb-6\">\r\n      <div className=\"flex items-center justify-center border-b p-4\">\r\n        <img src={MLH_PIC} alt=\"ml-logo\" className=\"w-48\" />\r\n      </div>\r\n      <Menu defaultSelectedKeys={[\"menu-1\"]} theme=\"light\" mode=\"horizontal\">\r\n        <Menu.Item\r\n          key=\"menu-1\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen QR={QR} setQRView={setQRView}  />)\r\n          }}\r\n        >\r\n          Register\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-2\"\r\n          onClick={() => {\r\n            pushScreen(<Teams />)\r\n          }}\r\n        >\r\n          Teams\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-3\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen QR={QR} setQRView={setQRView} />)\r\n          }}\r\n        >\r\n          Logout\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport {Divider,Button,Icon} from 'antd'\r\nexport default({}) =>{\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n      <div className=\"flex flex-col justify-center h-screen\">\r\n          <div className=\"text-right\">\r\n            <Button type=\"primary\" shape=\"circle\">\r\n           X\r\n            </Button>\r\n          </div>\r\n          <div className=\"h-48 min-w-full border-4 p-64 justify-center\">\r\n              <Divider dashed></Divider>\r\n          </div>\r\n</div>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { Layout } from \"antd\"\r\nimport Header from \"../components/Header\"\r\nimport Registration from \"../components/Registration\"\r\nimport QRView from \"../components/QRView\"\r\nconst { Content } = Layout\r\n\r\nexport default () => {\r\n  const [currentScreen, setScreen] = useState(<Registration />)\r\n  const [isQRView, setQRView] = useState(false)\r\n  return (\r\n    <>\r\n     {!isQRView ?\r\n      <Layout className=\"p-4 bg-white flex flex-col items-center\">\r\n      <div className=\"max-w-2xl\">\r\n        <Header pushScreen={setScreen} QR={isQRView} setQRView={setQRView} />\r\n        <Content>{currentScreen}</Content>\r\n      </div>\r\n      </Layout>\r\n      : <QRView/>}\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Home from \"./components/Home\"\r\nimport \"cordova_script\"\r\nimport \"tailwindcss/dist/tailwind.min.css\"\r\ndocument.addEventListener(\r\n  \"deviceready\",\r\n  () => {\r\n    ReactDOM.render(\r\n      <Home cordovaWork={true} />,\r\n      document.querySelector(\"#root\")\r\n    )\r\n  },\r\n  false\r\n)\r\n"],"sourceRoot":""}