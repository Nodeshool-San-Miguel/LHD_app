{"version":3,"sources":["assets/images/Mlh.svg","assets/images/Developer_photo.png","components/ListOfHackers/index.js","components/Registration/Dropdown.js","components/Registration/index.js","components/Teams/index.js","components/Header/index.js","components/Home.js","index.js"],"names":["module","exports","hackers","setHackers","console","info","itemLayout","dataSource","renderItem","index","name","email","Item","actions","type","onClick","clone","splice","deleteMeByIndex","Meta","avatar","src","Developer_photo","title","description","categories","value","category","setCategory","text","useState","viewDropdown","showDropdown","placement","overlay","map","key","visible","onVisibleChange","state","className","size","lang","teamName","setTeamName","placeholder","team_name","onChange","input","target","set_category","ListOfHackers","window","cordova","plugins","barcodeScanner","scan","result","a","fetch","then","res","status","json","data","push","alert","error","preferFrontCamera","showFlipCameraButton","showTorchButton","prompt","scan_prompt","resultDisplayDuration","orientation","formats","add_hacker","register_team","cancel_registration","pushScreen","MLH_PIC","alt","defaultSelectedKeys","theme","mode","Registration","header","Teams","teams","logout","Content","languages","currentScreen","setScreen","Header","document","addEventListener","ReactDOM","render","Home","cordovaWork","querySelector"],"mappings":"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","file":"static/js/main.87d09718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Mlh.c6849a42.svg\";","module.exports = __webpack_public_path__ + \"static/media/Developer_photo.5fa9ecfd.png\";","import React from \"react\"\r\nimport { List, Avatar, Icon } from \"antd\"\r\nimport Developer_photo from '../../assets/images/Developer_photo.png'\r\n\r\nexport default ({hackers = [], setHackers=console.info}) => {\r\n  const deleteMeByIndex = index => {\r\n    const clone = [...hackers]\r\n    clone.splice(index, 1)\r\n    setHackers(clone)\r\n  }\r\n  return (\r\n    <List\r\n      itemLayout=\"horizontal\"\r\n      dataSource={hackers}\r\n      renderItem={({ name = \"\", email = \"\" }, index) => (\r\n        <List.Item\r\n          actions={[\r\n            <Icon type=\"delete\" onClick={() => deleteMeByIndex(index)} />\r\n          ]}\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<Avatar src={Developer_photo} />}\r\n            title={name}\r\n            description={email}\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Dropdown, Button, Menu, Icon } from \"antd\"\r\nconst categories = [\r\n  {\r\n    name: \"Desarrollo Web\",\r\n    value: \"1\"\r\n  }\r\n]\r\nexport default ({ category = {}, setCategory = console.info, text=\"\" }) => {\r\n  const [viewDropdown, showDropdown] = useState(false)\r\n\r\n  return (\r\n    <Dropdown\r\n      placement=\"bottomCenter\"\r\n      overlay={\r\n        <Menu>\r\n          {categories.map(({ name, value }) => {\r\n            return (\r\n              <Menu.Item\r\n              key={value}\r\n                onClick={() => {\r\n                  showDropdown(false)\r\n                  setCategory({ name, value })\r\n                }}\r\n              >\r\n                {name}\r\n              </Menu.Item>\r\n            )\r\n          })}\r\n        </Menu>\r\n      }\r\n      visible={viewDropdown}\r\n      onVisibleChange={state => showDropdown(state)}\r\n      className=\"w-full mt-2\"\r\n    >\r\n      <Button\r\n        className=\"flex items-center justify-center\"\r\n        size=\"large\"\r\n        onClick={() => showDropdown(true)}\r\n      >\r\n        {category.name ? category.name : text}\r\n        {viewDropdown ? (\r\n          <Icon type=\"arrow-down\" />\r\n        ) : (\r\n          <Icon type=\"arrow-right\" />\r\n        )}\r\n      </Button>\r\n    </Dropdown>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport ListOfHackers from \"../ListOfHackers\"\r\nimport RegistrationDropdown from \"./Dropdown\"\r\nimport { Input, Button, Icon, Divider } from \"antd\"\r\n\r\nexport default ({lang=\"\"}) => {\r\n  const [category, setCategory] = useState({})\r\n  const [hackers, setHackers] = useState([])\r\n  const [teamName, setTeamName] = useState()\r\n\r\n  const scanQR = () =>{\r\n    window.cordova.plugins.barcodeScanner.scan(\r\n      async function (result) {\r\n\r\n        const data = await fetch(`https://lhd-api.chrisft25.now.sh/api/hackers/${result.text}`)\r\n        .then(async res=>{\r\n\r\n          switch(res.status){\r\n            case 404:\r\n              return false;\r\n\r\n            case 200:\r\n              return await res.json()\r\n              \r\n            default:\r\n                return false;\r\n          }\r\n        }\r\n        );\r\n        if(data){\r\n          const clone = [...hackers]\r\n           clone.push(data)\r\n           setHackers(clone)\r\n           alert('Hacker encontrado')\r\n        }else{\r\n          alert('Hacker no encontrado')\r\n        }\r\n      },\r\n      function (error) {\r\n          alert(\"Error: \" + error);\r\n      },\r\n      {\r\n          preferFrontCamera : false, \r\n          showFlipCameraButton : true, \r\n          showTorchButton : true, \r\n          prompt : lang.scan_prompt, \r\n          resultDisplayDuration: 500, \r\n          orientation : \"vertical\",\r\n          formats : \"QR_CODE\"\r\n      }\r\n   );\r\n  }\r\n\r\n  const cancelRegistration = ()=>{\r\n    setCategory({})\r\n    setHackers([])\r\n    setTeamName()\r\n  }\r\n\r\n  const onTeamNameChange = (input)=>{\r\n  setTeamName(input.target.value)\r\n  \r\n}\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <Input placeholder={lang.team_name} size=\"large\" className=\"w-full mt-2\" onChange={onTeamNameChange} value={teamName} />\r\n      <RegistrationDropdown category={category} setCategory={setCategory} text={lang.set_category}  />\r\n      <ListOfHackers hackers={hackers} setHackers={setHackers}/>\r\n      <Button onClick={scanQR} className=\"flex items-center justify-center\">\r\n        <Icon type=\"plus\" /> {lang.add_hacker}\r\n      </Button>\r\n      <Divider />\r\n      <Button type=\"primary\" size=\"large\" className=\"mt-2 w-full\">\r\n        {lang.register_team}\r\n      </Button>\r\n      <Button type=\"dashed\" className=\"mt-2 w-full\" onClick={cancelRegistration}>\r\n        {lang.cancel_registration}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Button } from \"antd\"\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"w-full\">\r\n      <p>This is team's screen</p>\r\n      <Button>aw</Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Menu } from \"antd\"\r\nimport MLH_PIC from \"../../assets/images/Mlh.svg\"\r\nimport RegistrationScreen from \"../Registration\"\r\nimport Teams from \"../Teams\"\r\n\r\n\r\n\r\nexport default ({ pushScreen = console.info, lang=\"\" }) => {\r\n  return (\r\n    <div className=\"flex flex-col -m-4 pb-6\">\r\n      <div className=\"flex items-center justify-center border-b p-4\">\r\n        <img src={MLH_PIC} alt=\"ml-logo\" className=\"w-48\" />\r\n      </div>\r\n      <Menu defaultSelectedKeys={[\"menu-1\"]} theme=\"light\" mode=\"horizontal\">\r\n        <Menu.Item\r\n          key=\"menu-1\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen lang={lang.register_team} />)\r\n          }}\r\n        >\r\n          {lang.header.register_team}\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-2\"\r\n          onClick={() => {\r\n            pushScreen(<Teams />)\r\n          }}\r\n        >\r\n          {lang.header.teams}\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"menu-3\"\r\n          onClick={() => {\r\n            pushScreen(<RegistrationScreen lang={lang.register_team} />)\r\n          }}\r\n        >\r\n          {lang.header.logout}\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Layout } from \"antd\"\r\nimport Header from \"../components/Header\"\r\nimport Registration from \"../components/Registration\"\r\nimport languages from \"../assets/languages/languages\"\r\n\r\nconst { Content } = Layout\r\n\r\nexport default () => {\r\n\r\n  let language;\r\n  //   window.navigator.globalization.getPreferredLanguage(\r\n  //     function (lang) {language=lang.value.split(\"-\")[0]}\r\n  // );\r\nlanguage=\"en\"\r\n  const lang = languages[language]\r\n  const [currentScreen, setScreen] = useState(<Registration lang={lang.register_team} />)\r\n  return (\r\n    <>\r\n\r\n      <Layout className=\"p-4 bg-white flex flex-col justify-center md:items-center\">\r\n      <div className=\"md:max-w-2xl\">\r\n        <Header pushScreen={setScreen} lang={lang}/>\r\n        <Content>{currentScreen}</Content>\r\n      </div>\r\n      </Layout>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Home from \"./components/Home\"\r\nimport \"cordova_script\"\r\nimport \"tailwindcss/dist/tailwind.min.css\"\r\ndocument.addEventListener(\r\n  \"deviceready\",\r\n  () => {\r\n    ReactDOM.render(\r\n      <Home cordovaWork={true} />,\r\n      document.querySelector(\"#root\")\r\n    )\r\n  },\r\n  false\r\n)\r\n"],"sourceRoot":""}